= form_for(@candidatedetail) do |f|
  - if @candidatedetail.errors.any?
    .alert.alert-danger.fade.in
      %a.close{"aria-label" => "close", "data-dismiss" => "alert", :href => "#"} ×
      %div
        %h4
          = pluralize(@candidatedetail.errors.count, "error")
          prohibited this candidatedetail from being saved:
        %ul
          - @candidatedetail.errors.full_messages.each do |message|
            %li= message
  - if flash[:notice]
    .alert.alert-success.fade.in
      %a.close{"aria-label" => "close", "data-dismiss" => "alert", :href => "#"} ×
      = flash[:notice]
  .row
    .col-lg-4.col-lg-offset-2
      .input-group
        .form-group
          = f.label :candidatename,"Candidate Name"
          %br/
          = f.text_field :candidatename,:placeholder=>"Candidate Name",:class => "form-control required",:required => true
        .form-group
          = f.label :candidateemail,"Candidate Email"
          %br/
          = f.text_field :candidateemail,:placeholder=>"Candidate Email",:class => "form-control required",:required => true,:onblur=>"validateEmail(this);"
        .form-group
          = f.label :candidatecontact,"Candidates Contact "
          %br/
          = f.text_field :candidatecontact,:placeholder=>"Candidate Contact",:class => "form-control required",:required => true,:onkeypress=>"return isNumberKey(event)"
        .form-group
          = f.label :yoe,"Year Of Experience"
          %br/
          = f.select :yoe, options_for_select([["1", "1"], ["2", "2"],["3", "3"],["4","4"],["5","5"],["6","6"],["7","7"],["8","8"],["9","9"],["10", "10"], ["11", "11"],["12", "12"],["13","13"],["14","14"],["15","15"],["16","16"],["17","17"],["18","18"],["19","19"]]),:prompt => "--Select Experience--"
    .col-lg-3.col-lg-offset-1
      .input-group
        .form-group
          = f.label :skills,"Skills"
          %br/
          = f.select :skills,options_from_collection_for_select(Skillset.all,"skills","skills"), :prompt => "--Select Skills--",:class => "form-control required"
        .form-group
          = f.label :jobtitle,"Job Title"
          %br/
          = f.text_field :jobtitle,:placeholder=>"Job Title",:class=>"form-control required",:required=>true
        .form-group
          = f.label :jobdescription,"Job Description"
          %br/
          = f.text_area :jobdescription,:placeholder=>"Job Description",:class=>"form-control",:id=>"textarea"
        .form-group{"ng-app" => ""}
          = f.label :attachedfile,"Attached File"
          %br/
          = f.file_field :attachedfile
    .form-group
      = f.hidden_field "companyemail",:class=>"required",:value => session[:companyemail]
    .form-group
      = f.hidden_field "password",:class=>"required",:value => session[:password]
    .form-group
      = f.hidden_field :status,:value =>"new"
    .row
      .col-lg-4.col-lg-offset-5
        .actions
          = f.submit :class=>"btn btn-primary btn-lg",:id=>"submit"
:javascript
  function isNumberKey(evt)
      {
         var charCode = (evt.which) ? evt.which : event.keyCode
         if (charCode > 31 && (charCode < 48 || charCode > 57))
          return false;
  
         return true;
      }
      function validateEmail(emailField){
          var reg = /^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/;
  
          if (reg.test(emailField.value) == false)
          {
              alert('Invalid Email Address');
              return false;
          }
  
          return true;
       }
      $('input[type="submit"]').click(function(){
         if($('input[type="text"]').val()=="")
         {
           $('input[type="text"]').css({"border-color":"red","border-width":"2px"});
         }
        if($('input[type="number"]').val()=="")
         {
           $('input[type="number"]').css({"border-color":"red","border-width":"2px"});
         }
        if($('select').val()=="")
         {
           $('select').css({"border-color":"red","border-width":"2px"});
         }
         else
         {
           $('input[type="text"]').css({"border-color":"skyblue"});
           $('input[type="number"]').css({"border-color":"skyblue"});
           $('select').css({"border-color":"skyblue"});
           $('.jumbotron').spin({
           lines: 12, // The number of lines to draw
           length: 7, // The length of each line
           width: 9, // The line thickness
           radius: 30, // The radius of the inner circle
           color: '#000',
           speed: 1, // Rounds per second
           trail: 60, // Afterglow percentage
           shadow: false // Whether to render a shadow
         });
         setTimeout(function(){ $(".jumbotron").spin(false); }, 2000);
         }
      });
  
      $('input[type="text"]').change(function(){
           $(this).css({"border-color":"skyblue"});
      });
      $('input[type="number"]').change(function(){
           $(this).css({"border-color":"skyblue"});
      });
      $('select').change(function(){
           $(this).css({"border-color":"skyblue"});
      });
